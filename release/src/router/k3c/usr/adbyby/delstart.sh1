#!/bin/sh
# ver: 2017-04-28 by tianbaoha

#ignore_lan_mac="00:11:22:33:44:55 AA:BB:CC:DD:EE:FF"
#ignore_lan_ip="192.168.2.101 192.168.2.102"
#ignore_ip="123.123.123.123 168.168.168.168"

dir=/media/nand/adbyby
dirp=$dir/tianbao
dirr=$dir/data
rule1=lazy.txt
rule2=video.txt
urlb1=http://oofxy4e74.bkt.clouddn.com/k3/adbyby
urlb2=$urlb1
urlr1=http://update.adbyby.com/rule3/lazy.jpg
urlr2=http://update.adbyby.com/rule3/video.jpg
cronf=/var/spool/cron/crontabs/admin
rcf=/opt/etc/init.d/S89adbyby
staf=/tmp/adbyby_on
port=80
chmod +x $dir/adbyby 2>/dev/null
ln -sf $dir/start.sh /opt/bin/ad

start() {
  [ "$restart" = "1" ] || {
    [ "$(ps | grep 'adbyby/adbyby' | grep -cv grep)" -ge "2" ]  && return
  }
  ad_init
  kill -9 `pidof adbyby`
  killall adbyby
  $dir/adbyby &
  startup on
  iptables -t nat -N adbyby
  iptables -t nat -F adbyby
  lan_ip="0.0.0.0/8 127.0.0.0/8 10.0.0.0/8 100.64.0.0/10 172.16.0.0/12 192.168.0.0/16 224.0.0.0/4 240.0.0.0/4 169.254.0.0/16"
  for lan_ip in $lan_ip; do
    iptables -t nat -A adbyby -p tcp --dport 80 -d $lan_ip -j RETURN
  done
  iptables -t nat -A adbyby -p tcp -m multiport --dport $port -j REDIRECT --to-ports 8118
  while iptables -t nat -D PREROUTING -p tcp -j adbyby; do sleep 1; done
  iptables -t nat -A PREROUTING -p tcp -j adbyby
  sed -i '/adbyby/d' $cronf
  echo "*/10 * * * * /bin/sh $dir/start.sh check >/dev/null 2>&1 # adbyby_check" >> $cronf
  echo "00 4 * * * /bin/sh $dir/start.sh restart >/dev/null 2>&1 # adbyby_restart" >> $cronf
  killall crond
  crond
  i_ignore
}

stop() {
  sed -i '/adbyby/d' $cronf
  killall crond
  crond
  while iptables -t nat -D PREROUTING -p tcp -j adbyby; do sleep 1; done
  iptables -t nat -F adbyby
  iptables -t nat -X adbyby
  rm -rf $staf
  startup
  kill -9 `pidof adbyby`
  killall adbyby
}

i_ignore() {
  blockmac=`nvram get blockmac_rules | sed 's/\;/ /g'`
  parentmac=`iptables-save | grep 'parent_control.*mac' | awk '{print $6}' | tr '\n' ' '`
  ipctlmac=`nvram get ip_ctl_rules | sed 's/\;/\n/g' | awk -F, '{print $1}' | tr '\n' ' '`
  if [ -n "$ignore_lan_mac" -o -n "$blockmac" -o -n "$parentmac" -o -n "$ipctlmac" ]; then
    for ignore_mac in $ignore_lan_mac $blockmac $parentmac $ipctlmac; do
      iptables -t nat -I adbyby -m mac --mac-source $ignore_mac -j RETURN
    done
    echo_mac=1
  fi
  if [ -n "$ignore_lan_ip" ]; then
    for ignore_lan_ip in $ignore_lan_ip; do
      iptables -t nat -I adbyby -s $ignore_lan_ip -j RETURN
    done
  fi
  if [ -n "$ignore_ip" ]; then
    for ignore_ip in $ignore_ip; do
      iptables -t nat -I adbyby -d $ignore_ip -j RETURN
    done
  fi
}

bin_check() {
  bin_size=`ls -l $dir/adbyby 2>/dev/null | awk '{print $5}'`
  [ -z "$bin_size" ] && bin_size=0
  [ -L "$dirp" ] || ( rm -rf $dirp; ln -sf /root/adbyby/adbyby $dirp )
  if [ "$(date +%H)" = "04" ]; then
    b_m1=`wget -qO- --no-check-certificate ${urlb1}.md5`
    b_m2=`md5sum $dir/adbyby 2>/dev/null | awk '{printf $1}'`
    [ "${#b_m1}"x = "32"x -a "${#b_m2}"x = "32"x ] && [ "$b_m1"x != "$b_m2"x ] && bin_size=0
  fi
  if [ ! -x "$dir/adbyby" -o "$bin_size" -le "333333" ]; then
    d_bin() {
      wget --no-check-certificate --timeout=20 --tries=3 -qO $dir/adbyby $1
    }
    echo "download bin"
    rm -rf $dir/adbyby
    d_bin $urlb1
    [ "$?" != "0" ] && d_bin $urlb2
    chmod +x $dir/adbyby 2>/dev/null
  fi
}

rule_check() {
  if [ ! -s "$dirr/$rule1" -o ! -s "$dirr/$rule2" -o "$(date +%H)" = "04" ]; then
    d_rule() {
      wget --no-check-certificate --timeout=20 --tries=3 -qO $dirr/$1 $2
    }
    echo "download rules"
    mkdir -p $dirr
    d_rule $rule1 $urlr1
    [ "$?" != "0" ] && d_rule $rule1 $urlr1
    d_rule $rule2 $urlr2
    [ "$?" != "0" ] && d_rule $rule2 $urlr2
  fi
}

ad_init() {
  bin_check
  rule_check
}

check() {
  if [ -f "$staf" -a ! -f "/tmp/koolproxy_on" ]; then
    [ "$(ps | grep 'adbyby/adbyby' | grep -cv grep)" -lt "2" -o -z "$(pidof crond)" -o "$(grep -c adbyby $cronf)" != "2" -o "$(iptables -t nat -L PREROUTING | grep -c adbyby)" != "1" -o "$(iptables -t nat -L adbyby | grep -c 8118)" != "1" ] && restart=1 && start
  fi
}

echo_info() {
  echo "tb ver: `awk '/tianbaoha/ {print $3;exit;}' $dir/start.sh 2>/dev/null`"
  echo "`$dir/adbyby --version 2>/dev/null`"
  echo "lazy date: `sed -n '1p' $dirr/$rule1 2>/dev/null | awk '{print $3,$4}'`"
  echo "video date: `sed -n '1p' $dirr/$rule2 2>/dev/null | awk '{print $3,$4}'`"
  echo "user rule total: `grep -cv '!' $dirr/user.txt 2>/dev/null`"
  [ "$echo_mac"x = "1"x ] && echo "ignore_lan_mac: $ipctlmac $blockmac $parentmac $ignore_lan_mac"
  [ -n "$ignore_lan_ip" ] && echo "ignore_lan_ip: $ignore_lan_ip"
  [ -n "$ignore_ip" ] && echo "ignore_ip: $ignore_ip"
  return 0
}

monitor() {
  while :; do
    sleep 66
    if [ ! -f "$staf" ]; then
      stop >/dev/null 2>&1
      exit
    fi
    check >/dev/null 2>&1
  done
}

startup() {
  sed -i '/adbyby/d' /opt/started_script.sh
  rm -rf $rcf
  if [ "$1" = "on" ]; then
  [ -x "/opt/etc/init.d/rc.unslung" ] && ln -sf $dir/start.sh $rcf || echo "sleep 20 && $dir/start.sh start >/dev/null 2>&1 # adbyby_start" >> /opt/started_script.sh
  fi
}

restart=0
case "$1" in
  start)
  [ -f "$staf" -a "$(ps | grep 'adbyby/adbyby' | grep -cv grep)" -ge "2" ]  && echo "already running" || {
      [ -f "/tmp/koolproxy_on" ] && echo "stop koolproxy first" && exit
      touch $staf
      start >/dev/null 2>&1
      echo "started"
      echo_info
      #monitor &
    }
  ;;
  stop)
    stop >/dev/null 2>&1
    echo "stoped"
  ;;
  restart)
    [ -f "$staf" ] && {
      [ -f "/tmp/koolproxy_on" ] && echo "stop koolproxy first" && exit
      restart=1
      start >/dev/null 2>&1
      echo_info
    } || echo "start first"
  ;;
  check)
    check >/dev/null 2>&1
  ;;
  init)
    ad_init
  ;;
  *)
  echo "Usage: $0 [start stop restart check]"
  ;;
esac
